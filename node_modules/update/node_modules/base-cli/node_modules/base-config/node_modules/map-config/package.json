{
  "name": "map-config",
  "description": "Map configuration objects to application methods.",
  "version": "0.4.3",
  "homepage": "https://github.com/doowb/map-config",
  "author": {
    "name": "Brian Woodward",
    "url": "https://github.com/doowb"
  },
  "contributors": [
    {
      "name": "Brian Woodward",
      "email": "brian.woodward@gmail.com",
      "url": "https://github.com/doowb"
    },
    {
      "name": "Jon Schlinkert",
      "email": "github@sellside.com",
      "url": "https://github.com/jonschlinkert"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/doowb/map-config"
  },
  "bugs": {
    "url": "https://github.com/doowb/map-config/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "array-unique": "^0.2.1",
    "async": "^1.5.2"
  },
  "devDependencies": {
    "base": "^0.6.7",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.0.0",
    "gulp-istanbul": "^0.10.2",
    "gulp-mocha": "^2.1.3",
    "mocha": "*"
  },
  "keywords": [
    "config",
    "configuration",
    "settings"
  ],
  "verb": {
    "related": {
      "list": [
        "assemble",
        "generate",
        "templates",
        "update",
        "verb"
      ]
    }
  },
  "readme": "# map-config [![NPM version](https://img.shields.io/npm/v/map-config.svg)](https://www.npmjs.com/package/map-config) [![Build Status](https://img.shields.io/travis/doowb/map-config.svg)](https://travis-ci.org/doowb/map-config)\n\n> Map configuration objects to application methods.\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm i map-config --save\n```\n\n## Usage\n\n```js\nvar MapConfig = require('map-config');\n```\n\n## API\n\n### [MapConfig](index.js#L23)\nCreate a new instance of MapConfig with a specified map and application.\n\n\n**Params**\n\n* `app` **{Object}**: Object containing the methods that will be called based on the map specification.    \n* `map` **{Object}**: Optional object specifying how to map a configuration to an application.    \n\n\n**Example**\n\n\n\n```js\nvar mapper = new MapConfig(app, map);\n```\n\n\n### [.map](index.js#L63)\nMap properties to methods and/or functions.\n\n\n**Params**\n\n* `key` **{String}**: property key to map.    \n* `val` **{Function|Object}**: Optional function to call when a config has the given key. May also pass another instance of MapConfig to be processed.    \n* `returns` **{Object}** `this`: to enable chaining  \n\n\n**Example**\n\n\n\n```js\nmapper\n  .map('baz')\n  .map('bang', function(config) {\n  });\n```\n\n\n### [.alias](index.js#L98)\nAlias properties to methods on the `app`.\n\n\n**Params**\n\n* `alias` **{String}**: Property being mapped from..    \n* `key` **{String}**: Property being mapped to on the app.    \n* `returns` **{Object}** `this`: to enable chaining  \n\n\n**Example**\n\n\n\n```js\nmapper.alias('foo', 'bar');\n```\n\n\n### [.process](index.js#L115)\nProcess a configuration object with the already configured `map` and `app`.\n\n\n**Params**\n\n* `config` **{Object}**: Configuration object to map to application methods.    \n* `cb` **{Function}**: Optional callback function that will be called when finished or if an error occurs during processing.    \n\n\n**Example**\n\n\n\n```js\nmapper.process(config);\n```\n\n\n### [.addKey](index.js#L179)\nAdd a key to the `.keys` array. May also be used to add an array of namespaced keys to the `.keys` array. This is useful for mapping sub configs to a key in a parent config.\n\n\n**Params**\n\n* `key` **{String}**: key to push onto `.keys`    \n* `arr` **{Array}**: Array of sub keys to push onto `.keys`    \n* `returns` **{Object}** `this`: for chaining  \n\n\n**Example**\n\n\n\n```js\nmapper.addKey('foo');\nconsole.log(mapper.keys);\n//=> ['foo']\n\nvar mapper1 = new MapConfig();\nvar mapper2 = new MapConfig();\nmapper2.map('foo');\nmapper2.map('bar');\nmapper2.map('baz');\n\nmapper1.map('mapper2', function(config, next) {\n  mapper2.process(config, next);\n});\nmapper1.addKey('mapper2', mapper2.keys);\nconsole.log(mapper1.keys);\n//=> ['mapper2.foo', 'mapper2.bar', 'mapper2.baz']\n```\n\n\n\n## Related projects\n* [assemble](https://www.npmjs.com/package/assemble): Assemble is a powerful, extendable and easy to use static site generator for node.js. Used… [more](https://www.npmjs.com/package/assemble) | [homepage](https://github.com/assemble/assemble)\n* [generate](https://www.npmjs.com/package/generate): Fast, composable, highly extendable project generator with a user-friendly and expressive API. | [homepage](https://github.com/generate/generate)\n* [templates](https://www.npmjs.com/package/templates): System for creating and managing template collections, and rendering templates with any node.js template engine.… [more](https://www.npmjs.com/package/templates) | [homepage](https://github.com/jonschlinkert/templates)\n* [update](https://www.npmjs.com/package/update): Easily keep anything in your project up-to-date by installing the updaters you want to use… [more](https://www.npmjs.com/package/update) | [homepage](https://github.com/update/update)\n* [verb](https://www.npmjs.com/package/verb): Documentation generator for GitHub projects. Verb is extremely powerful, easy to use, and is used… [more](https://www.npmjs.com/package/verb) | [homepage](https://github.com/verbose/verb)\n\n## Running tests\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/doowb/map-config/issues/new).\n\n## Author\n**Brian Woodward**\n\n+ [github/doowb](https://github.com/doowb)\n+ [twitter/doowb](http://twitter.com/doowb)\n\n## License\nCopyright © 2016 [Brian Woodward](https://github.com/doowb)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on January 29, 2016._\n",
  "readmeFilename": "README.md",
  "_id": "map-config@0.4.3",
  "_from": "map-config@^0.4.2"
}
