{
  "name": "omit-empty",
  "description": "Recursively omit empty properties from an object. Omits empty objects, arrays, strings or zero.",
  "version": "0.3.2",
  "homepage": "https://github.com/jonschlinkert/omit-empty",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/omit-empty"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/omit-empty/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "has-values": "^0.1.3",
    "isobject": "^2.0.0",
    "reduce-object": "^0.1.3"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "keywords": [
    "clear",
    "delete",
    "empty",
    "find",
    "has",
    "hasown",
    "javascript",
    "js",
    "key",
    "keys",
    "node",
    "node-js",
    "object",
    "omit",
    "properties",
    "property",
    "remove",
    "util",
    "utilities",
    "utility",
    "value"
  ],
  "verb": {
    "related": {
      "list": [
        "arrayify-compact",
        "compact-object",
        "delete",
        "flatten-object",
        "for-in",
        "for-own",
        "has-any",
        "has-value",
        "is-number",
        "is-plain-object",
        "mixin-deep",
        "mixin-object",
        "object-length",
        "omit-empty",
        "reduce-object"
      ]
    },
    "layout": "default",
    "plugins": [
      "gulp-format-md"
    ]
  },
  "readme": "# omit-empty [![NPM version](https://img.shields.io/npm/v/omit-empty.svg)](https://www.npmjs.com/package/omit-empty) [![Build Status](https://img.shields.io/travis/jonschlinkert/omit-empty.svg)](https://travis-ci.org/jonschlinkert/omit-empty)\n\n> Recursively omit empty properties from an object. Omits empty objects, arrays, strings or zero.\n\n- [Install](#install)\n- [Usage](#usage)\n- [Related projects](#related-projects)\n- [Running tests](#running-tests)\n- [Contributing](#contributing)\n- [Author](#author)\n- [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i omit-empty --save\n```\n\n## Usage\n\n```js\nvar omitEmpty = require('omit-empty');\n\nomitEmpty({a: 'a', b: ''});\n//=> {a: 'a'}\n\nomitEmpty({a: 'a', b: {c: 'c', d: ''});\n//=> {a: 'a', b: {c: 'c'}\n\nomitEmpty({a: ['a'], b: []});\n//=> {a: ['a']}\n\nomitEmpty({a: 0, b: 1});\n//=> {a: 0, b: 1}\n\n// set the `noZero` flag\nomitEmpty({a: 0, b: 1}, true);\n//=> {b: 1}\n```\n\n## Related projects\n\n* [arrayify-compact](https://www.npmjs.com/package/arrayify-compact): Casts the given value to a flatten array, and removes falsey items (similar to lodash… [more](https://www.npmjs.com/package/arrayify-compact) | [homepage](https://github.com/jonschlinkert/arrayify-compact)\n* [compact-object](https://www.npmjs.com/package/compact-object): Similar to omit-empty, recursively omits empty properties, but also compacts/flattens nested arrays in an object. | [homepage](https://github.com/jonschlinkert/compact-object)\n* [delete](https://www.npmjs.com/package/delete): Delete files and folders and any intermediate directories if they exist (sync and async). | [homepage](https://github.com/jonschlinkert/delete)\n* [flatten-object](https://www.npmjs.com/package/flatten-object): Flatten a nested object | [homepage](https://github.com/toddself/flatten-object)\n* [for-in](https://www.npmjs.com/package/for-in): Iterate over the own and inherited enumerable properties of an objecte, and return an object… [more](https://www.npmjs.com/package/for-in) | [homepage](https://github.com/jonschlinkert/for-in)\n* [for-own](https://www.npmjs.com/package/for-own): Iterate over the own enumerable properties of an object, and return an object with properties… [more](https://www.npmjs.com/package/for-own) | [homepage](https://github.com/jonschlinkert/for-own)\n* [has-any](https://www.npmjs.com/package/has-any): Returns true if an object has any of the specified keys. | [homepage](https://github.com/jonschlinkert/has-any)\n* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using… [more](https://www.npmjs.com/package/has-value) | [homepage](https://github.com/jonschlinkert/has-value)\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number)\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object)\n* [mixin-deep](https://www.npmjs.com/package/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | [homepage](https://github.com/jonschlinkert/mixin-deep)\n* [mixin-object](https://www.npmjs.com/package/mixin-object): Mixin the own and inherited properties of other objects onto the first object. Pass an… [more](https://www.npmjs.com/package/mixin-object) | [homepage](https://github.com/jonschlinkert/mixin-object)\n* [object-length](https://www.npmjs.com/package/object-length): Get the length of an object's properties, excluding prototype properties. Works with dontEnum bugs. | [homepage](https://github.com/jonschlinkert/object-length)\n* [omit-empty](https://www.npmjs.com/package/omit-empty): Recursively omit empty properties from an object. Omits empty objects, arrays, strings or zero. | [homepage](https://github.com/jonschlinkert/omit-empty)\n* [reduce-object](https://www.npmjs.com/package/reduce-object): Reduces an object to a value that is the accumulated result of running each property… [more](https://www.npmjs.com/package/reduce-object) | [homepage](https://github.com/jonschlinkert/reduce-object)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/omit-empty/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on December 24, 2015._",
  "readmeFilename": "README.md",
  "_id": "omit-empty@0.3.2",
  "_from": "omit-empty@^0.3.2"
}
