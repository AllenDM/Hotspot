{
  "name": "reduce-object",
  "description": "Reduces an object to a value that is the accumulated result of running each property in the object through a callback. Executes the callback function once for each own enumerable property in the object, receiving four arguments: the initial value (or value from the previous callback call), the `value` of the current property, the `key` of the current property, and the `object` over which the function is iterating. Node.js/JavaScript utility.",
  "version": "0.1.3",
  "homepage": "https://github.com/jonschlinkert/reduce-object",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/reduce-object.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/reduce-object/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/reduce-object/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "^4.0.4"
  },
  "keywords": [
    "accumulate",
    "accumulator",
    "callback",
    "cb",
    "find",
    "for-in",
    "for-own",
    "has",
    "has-own",
    "hasOwn",
    "index",
    "iterate",
    "iterator",
    "javascript",
    "js",
    "key",
    "keys",
    "loop",
    "node.js",
    "object",
    "own",
    "prop",
    "properties",
    "property",
    "reduce",
    "util",
    "utilities",
    "utility",
    "utils",
    "value"
  ],
  "dependencies": {
    "for-own": "^0.1.1"
  },
  "readme": "# reduce-object [![NPM version](https://badge.fury.io/js/reduce-object.svg)](http://badge.fury.io/js/reduce-object)\n\n> Reduces an object to a value that is the accumulated result of running each property in the object through a callback.\n\n## Install\n#### Install with [npm](npmjs.org):\n\n```bash\nnpm i reduce-object --save\n```\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Usage\n\nExecutes the callback function once for each own enumerable property in the object, receiving four arguments:\n\n  - `acc`: the initial value (or value from the previous callback call),\n  - `value`: the of the current property,\n  - `key`: the of the current property, and\n  - the original `object` over which the function is iterating.\n\n```js\nvar reduce = require('reduce-object');\n\nvar a = {a: 'foo', b: 'bar', c: {}};\n\nvar obj = reduce(a, function (acc, value, key, orig) {\n  if (typeof value === 'object') {\n    acc[key] = {what: 'huh?'};\n  } else {\n    acc[key] = value.toUpperCase(); // why?\n  }\n  return acc;\n}, {});\n\nconsole.log(obj);\n//=> {a: 'FOO', b: 'BAR', c: {what: 'huh?'}};\n```\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.\nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on September 20, 2014._",
  "readmeFilename": "README.md",
  "_id": "reduce-object@0.1.3",
  "_from": "reduce-object@^0.1.3"
}
